.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "AnyEvent::MultiDownload 3"
.TH AnyEvent::MultiDownload 3 "2017-07-10" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
AnyEvent::MultiDownload \- XXXXXXXXXXXXXXXXX
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\s-1XXXXXXXXXXXXXXXXXXXXXX, XXXXXXXXXXX, XXXXXXXX, XXXXXXXXXXXXXX, XXXXXXX.\s0
.PP
\&\s-1XXXXXXXXX, XXXXXXXXXXXXXX.\s0
.PP
.Vb 2
\&    use AE;
\&    use AnyEvent::MultiDownload;
\&
\&    my @urls = (
\&        \*(Aqhttp://mirrors.163.com/centos/7/isos/x86_64/CentOS\-7.0\-1406\-x86_64\-DVD.iso\*(Aq,
\&        \*(Aqhttp://mirrors.sohu.com/centos/7/isos/x86_64/CentOS\-7.0\-1406\-x86_64\-DVD.iso\*(Aq,
\&    );
\&    
\&    my $cv = AE::cv;
\&    my $MultiDown = AnyEvent::MultiDownload\->new( 
\&        url     => pop @urls, 
\&        mirror  => \e@urls, 
\&        path  => \*(Aq/tmp/ubuntu.iso\*(Aq,
\&        block_size => 1 * 1024 * 1024, # 1M
\&        on_block_finish => sub {
\&            my ($hdr, $block_ref, $md5) = @_;
\&            if ($md5 eq $src_md5) {
\&                return 1;
\&            }
\&            0
\&        },
\&        on_finish => sub {
\&            my $len = shift;
\&            $cv\->send;
\&        },
\&        on_error => sub {
\&            my ($error, $hdr) = @_;
\&            $cv\->send;
\&        }
\&    )\->start;
\&    
\&    $cv\->recv;
.Ve
.PP
\&\s-1XXXXXXXXXXXXXXXX. XXXXXX.\s0
.PP
.Vb 2
\&    use AE;
\&    use AnyEvent::MultiDownload;
\&    
\&    my $cv = AE::cv;
\&    
\&    $cv\->begin;
\&    my $MultiDown = AnyEvent::MultiDownload\->new( 
\&        url     => \*(Aqhttp://xxx/file1\*(Aq,
\&        path  => "/tmp/file2",
\&        on_finish => sub {
\&            my $len = shift;
\&            $cv\->end;
\&        },
\&        on_error => sub {
\&            my ($error, $hdr) = @_;
\&            $cv\->end;
\&        }
\&    );
\&    $MultiDown\->start;
\&    
\&    $cv\->begin;
\&    my $MultiDown1 = AnyEvent::MultiDownload\->new( 
\&        url     => \*(Aqhttp://xxx/file2\*(Aq, 
\&        path  => "/tmp/file1",
\&        on_finish => sub {
\&            my $len = shift;
\&            $cv\->end;
\&        },
\&        on_error => sub {
\&            my ($error, $hdr) = @_;
\&            $cv\->end;
\&        }
\&    );
\&    $MultiDown1\->start;
\&    
\&    $cv\->recv;
.Ve
.PP
\&\s-1XXXXXXXXXXXXXX. XXXXXXXXXXXXXXX. XXXXXXXXXXXXXXXXXXXXXXXXXX.\s0
.SH "XX"
.IX Header "XX"
.SS "url"
.IX Subsection "url"
\&\s-1XXXXXX, XXXXXXX\s0 master \s-1XXX, XXXX, XXXXXXX.\s0
.SS "path"
.IX Subsection "path"
\&\s-1XXXXXXXX, XXXXXXXX, XXXX, XXXXXXX. XXXXXXX.\s0
.SS "mirror"
.IX Subsection "mirror"
\&\s-1XXXXXXXXX, XXXXXXXXXXXXXXXXXXXXXX. XXXXXXXX, XXXXXXXXXXXXXXXXXX. XXXXXXXXXXXXXXXXXXXX. XXXXXXXX.\s0
.SS "block_size"
.IX Subsection "block_size"
\&\s-1XXXXXX, XXXX\s0 block_size \s-1XXXXXXXXX, XXX 1M XXX, XXXXXXXXXX 1M XXXXXXXXXXXXXXXX. XXXXXXXX.\s0
.SS "digest"
.IX Subsection "digest"
\&\s-1XXXXXXXXXXXXXXXXX, XX\s0 Digest::MD5 X Digest::SHA1
.SS "retry_interval"
.IX Subsection "retry_interval"
\&\s-1XXXXX, XXX 10\s0 s.
.SS "max_retries"
.IX Subsection "max_retries"
\&\s-1XXXXXXXXXXXX, XXX 3 X.\s0
.SS "max_per_host"
.IX Subsection "max_per_host"
\&\s-1XXXXXXXXXXXXXX.\s0
.SS "headers"
.IX Subsection "headers"
\&\s-1XXXXXXXXXXX\s0 header , \s-1XXXXXXXXXXX, XXXXXXXXX.\s0
.SS "timeout"
.IX Subsection "timeout"
\&\s-1XXXXXXX, XXXX, XXX\s0 10s.
.SS "recurse \s-1XXX\s0"
.IX Subsection "recurse XXX"
\&\s-1XXXXXXXXXXX, XXXXXXXXXX.\s0
.SS "content_file \s-1DEPRECATED\s0"
.IX Subsection "content_file DEPRECATED"
\&\s-1XXXXXXXX\s0 path
.SH "METHODS"
.IX Header "METHODS"
.SS "\fIstart()\fP"
.IX Subsection "start()"
\&\s-1XXXXXXX. XXXXXXXXX, XXXXXXXXXXXX.\s0
.SS "\fImulti_get_file()\fP \s-1DEPRECATED\s0"
.IX Subsection "multi_get_file() DEPRECATED"
\&\s-1XXXXXXX\s0 start X
.SH "XX"
.IX Header "XX"
.SS "on_block_finish"
.IX Subsection "on_block_finish"
\&\s-1XXXXX 1M X, XXXXX, XXXXXXXXXXXXXXXXX, XXXXXX 200 X 206 XXXXXXXXX.\s0
.PP
\&\s-1XXXXXXX, XXXXXXXX\s0 header, \s-1XXXXXXXXX \s0( \s-1XX\s0 block \s-1XXX,\s0 size \s-1XXXXXX,\s0 pos \s-1XXXXXX, XXX\s0 md5 \s-1XX\s0 sha1 \s-1XXX \s0). \s-1XXXXXXX, XXXX 1 XXXXXXXX, XXX 0 XXXXXX. \s0
.PP
\&\s-1XXXXXXXXXXX, XXXXXXXXXXXX, XXXXXXX\s0 \f(CW$self\fR\->digest \s-1XXXXX, XXXX MD5 XX SHA1 XXXX, XXXXXXX. XXXXXXXX. XXXXXXXXXXXXXXXX.\s0
.SS "on_finish"
.IX Subsection "on_finish"
\&\s-1XXXXXXXXXXXXX, XXXXXXXXXXXXXXXXXXXXXXX. XXXXXXXX.\s0
.SS "on_error"
.IX Subsection "on_error"
\&\s-1XXXXXXXXXXXXXX, XXXXXXXX, XXXXXXXXXXXXXX.\s0
.SS "on_seg_finish \s-1DEPRECATED\s0"
.IX Subsection "on_seg_finish DEPRECATED"
\&\s-1XXXXXXXX\s0 on_block_finish \s-1XXX.\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
AnyEvent, AnyEvent::HTTP, App::ManiacDownloader.
.SH "AUTHOR"
.IX Header "AUTHOR"
\&\s-1XX\s0 fukai <iakuf@163.com>
